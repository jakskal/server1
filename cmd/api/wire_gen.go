// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/google/wire"
	"github.com/jinzhu/gorm"
	"server1/cmd/handler"
	"server1/internal/auth"
	"server1/internal/register"
	"server1/internal/token"
	"server1/internal/user"
)

import (
	_ "github.com/jinzhu/gorm/dialects/postgres"
	_ "github.com/joho/godotenv/autoload"
)

// Injectors from wire.go:

func initHandler(db *gorm.DB) *handler.Handler {
	repository := user.NewRepository(db)
	service := user.NewService(repository)
	tokenService := token.NewService()
	authService := auth.NewService(service, tokenService)
	controller := auth.NewController(authService)
	registerService := register.NewService(service)
	registerController := register.NewController(registerService)
	tokenController := token.NewController()
	handlerHandler := handler.NewHandler(controller, registerController, tokenController)
	return handlerHandler
}

// wire.go:

var repositorySet = wire.NewSet(user.NewRepository, wire.Bind(new(user.RepositorySystem), new(*user.Repository)))

var serviceSet = wire.NewSet(user.NewService, auth.NewService, token.NewService, register.NewService)

var controllerSet = wire.NewSet(token.NewController, auth.NewController, register.NewController)

var handlerSet = wire.NewSet(handler.NewHandler)

var appSet = wire.NewSet(
	repositorySet,
	serviceSet,
	controllerSet,
	handlerSet,
)
